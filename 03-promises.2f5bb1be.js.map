{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAwBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAhCMJ,SAASC,cAAc,SAE/BY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJM,KAAMC,EAAMP,EAANQ,OAE3B,IAAKL,EAAMM,MAAQ,IAAMJ,EAAKI,MAAQ,IAAMF,EAAOE,MAAQ,EAEzD,YADA3B,EAAA4B,OAAOC,QAAQ,sCAIjB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOE,MAAOG,GAAK,EAAG,CACzC,IAAMC,GAAYV,EAAMM,QAASJ,EAAKI,MAAQG,EAC9C1B,EAAc0B,EAAGC,GACdC,MAAK,SAAAC,G,OAAUjC,EAAA4B,OAAOM,QAAQD,E,IAC9BE,OAAM,SAAAC,G,OAASpC,EAAA4B,OAAOC,QAAQO,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (+delay.value < 0 || +step.value < 0 || +amount.value < 0) {\n    Notify.failure('Please, enter only positive values')\n    return\n  }\n\n  for (let i = 0; i < +amount.value; i += 1) {\n    const sumDelay = +delay.value + +step.value * i;\n    createPromise(i, sumDelay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  };\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};"],"names":["$h6c0i","parcelRequire","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delay","step1","step","amount1","amount","value","Notify","failure","i","sumDelay","then","result","success","catch","error"],"version":3,"file":"03-promises.2f5bb1be.js.map"}