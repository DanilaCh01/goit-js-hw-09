{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAwBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAhCAJ,SAASC,cAAc,SAE/BW,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYC,MAAAC,EAAOC,KAAAC,EAAMC,OAAAC,IACvBR,EAAMS,cACV,IAAKL,EAAMM,MAAQ,IAAMJ,EAAKI,MAAQ,IAAMF,EAAOE,MAAQ,EAEzD,YADAzB,EAAA0B,OAAOC,QAAQ,sCAIjB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOE,MAAOG,GAAK,EAAG,CACzC,MAAMC,GAAYV,EAAMM,QAASJ,EAAKI,MAAQG,EAC9CxB,EAAcwB,EAAGC,GACdC,MAAKC,GAAU/B,EAAA0B,OAAOM,QAAQD,KAC9BE,OAAMC,GAASlC,EAAA0B,OAAOC,QAAQO,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (+delay.value < 0 || +step.value < 0 || +amount.value < 0) {\n    Notify.failure('Please, enter only positive values')\n    return\n  }\n\n  for (let i = 0; i < +amount.value; i += 1) {\n    const sumDelay = +delay.value + +step.value * i;\n    createPromise(i, sumDelay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  };\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};"],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","elements","delay","delay1","step","step1","amount","amount1","currentTarget","value","Notify","failure","i","sumDelay","then","result","success","catch","error"],"version":3,"file":"03-promises.81e529fd.js.map"}